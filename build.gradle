group 'xosmig'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.jetbrains:annotations:15.0'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.github.andrewoma.dexx:kollection:0.7'
    compile 'com.fulmicoton:multiregexp:0.3'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.mockito:mockito-core:2.7.19"
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.jimfs:jimfs:1.1'
}

apply plugin: 'jacoco'

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

apply plugin: 'application'

run {
    if (System.hasProperty("margs")) {
        args System.getProperty("margs").split()
    }
    main = mainClassName = 'MainKt'
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task install(dependsOn: jar) {
    doLast {
        if (!System.properties['os.name'].toLowerCase().contains('linux')) {
            println "This OS is not supported"
            return
        }
        def file = new File(System.getProperty("user.home") + "/.local/bin/githw")
        file.setExecutable(true)
        file.write("""
            |#!/bin/bash
            |
            |java -jar ${jar.archivePath} "${'$'}@"
            |""".stripMargin()
        )
    }
}
